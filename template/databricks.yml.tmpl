bundle:
  name: {{.project_name}}

{{- $package_name := .project_name }}

# Global variables shared across all targets
variables:
  {{- if .include_unity_catalog }}
  # Unity Catalog Configuration
  catalog:
    description: "Unity Catalog name"

  schema:
    description: "Schema name"
  {{- end }}

  # Cluster Configuration
  cluster_node_type:
    description: "Node type for clusters"

  min_workers:
    description: "Minimum number of workers"
    type: int

  max_workers:
    description: "Maximum number of workers"
    type: int

  # Service Principal
  service_principal_id:
    description: "Service principal ID for authentication"

  # Notification Configuration
  notification_email:
    description: "Primary notification email"

  # Environment Configuration
  environment:
    description: "Environment name"

targets:
{{- if .include_dev_env }}
  dev:
    mode: development
    workspace:
      {{- if eq .cloud_provider "azure" }}
      host: https://adb-123456789.12.azuredatabricks.net  # Replace with your dev workspace URL
      {{- else if eq .cloud_provider "aws" }}
      host: https://dbc-12345678-1234.cloud.databricks.com  # Replace with your dev workspace URL
      {{- end }}
      root_path: /Users/${workspace.current_user.userName}/.bundle/${bundle.name}/${bundle.target}

    run_as:
      user_name: ${workspace.current_user.userName}

    variables:
      {{- if .include_unity_catalog }}
      catalog: dev_catalog
      schema: dev_schema
      {{- end }}
      environment: dev
      cluster_node_type: {{if eq .cloud_provider "azure"}}Standard_DS3_v2{{else}}i3.xlarge{{end}}
      min_workers: 0
      max_workers: 2
      service_principal_id: {{.organization}}-{{.project_name}}-dev-sp
      notification_email: {{.email}}
{{- end }}

{{- if .include_staging_env }}
  staging:
    mode: production
    workspace:
      {{- if eq .cloud_provider "azure" }}
      host: https://adb-123456789.13.azuredatabricks.net  # Replace with your staging workspace URL
      {{- else if eq .cloud_provider "aws" }}
      host: https://dbc-12345678-1235.cloud.databricks.com  # Replace with your staging workspace URL
      {{- end }}
      root_path: /Shared/.bundle/${bundle.name}/${bundle.target}

    run_as:
      service_principal_name: ${var.service_principal_id}

    variables:
      {{- if .include_unity_catalog }}
      catalog: staging_catalog
      schema: staging_schema
      {{- end }}
      environment: staging
      cluster_node_type: {{if eq .cloud_provider "azure"}}Standard_DS4_v2{{else}}i3.2xlarge{{end}}
      min_workers: 1
      max_workers: 4
      service_principal_id: {{.organization}}-{{.project_name}}-staging-sp
      notification_email: {{.email}}
{{- end }}

{{- if .include_prod_env }}
  prod:
    mode: production
    workspace:
      {{- if eq .cloud_provider "azure" }}
      host: https://adb-123456789.14.azuredatabricks.net  # Replace with your prod workspace URL
      {{- else if eq .cloud_provider "aws" }}
      host: https://dbc-12345678-1236.cloud.databricks.com  # Replace with your prod workspace URL
      {{- end }}
      root_path: /Shared/.bundle/${bundle.name}/${bundle.target}

    run_as:
      service_principal_name: ${var.service_principal_id}

    variables:
      {{- if .include_unity_catalog }}
      catalog: prod_catalog
      schema: prod_schema
      {{- end }}
      environment: prod
      cluster_node_type: {{if eq .cloud_provider "azure"}}Standard_DS5_v2{{else}}i3.4xlarge{{end}}
      min_workers: 2
      max_workers: 8
      service_principal_id: {{.organization}}-{{.project_name}}-prod-sp
      notification_email: {{.email}}
{{- end }}

# Common resources across all environments
resources:
  {{- if .include_example_jobs }}
  jobs:
    {{$package_name}}_job:
      name: ${bundle.target}_{{$package_name}}_job

      job_clusters:
        - job_cluster_key: main_cluster
          new_cluster:
            spark_version: 13.3.x-scala2.12
            node_type_id: ${var.cluster_node_type}
            {{- if eq .cloud_provider "azure" }}
            driver_node_type_id: ${var.cluster_node_type}
            {{- end }}
            autoscale:
              min_workers: ${var.min_workers}
              max_workers: ${var.max_workers}
            custom_tags:
              environment: ${var.environment}
              project: {{.project_name}}
              bundle: ${bundle.name}
              created_by: {{.author}}

      tasks:
        - task_key: main_task
          job_cluster_key: main_cluster
          notebook_task:
            notebook_path: ./src/notebooks/{{$package_name}}_processing
            source: WORKSPACE
          timeout_seconds: 3600
          max_retries: 2

      email_notifications:
        on_failure:
          - ${var.notification_email}

      tags:
        environment: ${var.environment}
        bundle: ${bundle.name}
        project: {{.project_name}}
  {{- end }}

{{- if .include_unity_catalog }}
# Unity Catalog resources
resources:
  schemas:
    {{$package_name}}_schema:
      name: ${var.schema}
      catalog_name: ${var.catalog}
      comment: "Schema for {{.project_name}} project - ${var.environment} environment"

      properties:
        environment: ${var.environment}
        project: {{.project_name}}
        owner: {{.author}}
        created_by_bundle: ${bundle.name}
{{- end }}