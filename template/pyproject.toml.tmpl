[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "{{.project_name | replace "-" "_"}}"
version = "1.0.0"
description = "{{.project_description}}"
authors = [
    {name = "{{.author}}", email = "{{.email}}"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">={{.python_version}}"

dependencies = [
    "databricks-sdk>=0.31.0",
    "pyspark>=3.5.0",
    "delta-spark>=3.2.0",
    {{- if .include_data_quality }}
    "great-expectations>=0.18.0",
    "pandera>=0.19.0",
    {{- end }}
    {{- if .include_monitoring }}
    "prometheus-client>=0.20.0",
    "structlog>=24.1.0",
    {{- end }}
    {{- if .include_security }}
    "cryptography>=42.0.0",
    "python-jose>=3.3.0",
    {{- end }}
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "typer>=0.12.0",
    "rich>=13.7.0",
    "loguru>=0.7.0"
]

[project.optional-dependencies]
dev = [
    "ruff>=0.6.0",
    "mypy>=1.11.0",
    "pytest>=8.3.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "pre-commit>=3.8.0",
    "black>=24.8.0",
    "isort>=5.13.0"
]

[project.urls]
Homepage = "https://github.com/{{.organization}}/{{.project_name}}"
Repository = "https://github.com/{{.organization}}/{{.project_name}}"
Issues = "https://github.com/{{.organization}}/{{.project_name}}/issues"

[project.scripts]
{{.project_name | replace "-" "_"}} = "{{.project_name | replace "-" "_"}}.cli:main"

# Ruff configuration
[tool.ruff]
target-version = "py{{.python_version | replace "." ""}}"
line-length = 88
select = [
    "E", "W",   # pycodestyle
    "F",        # pyflakes
    "UP",       # pyupgrade
    "B",        # flake8-bugbear
    "SIM",      # flake8-simplify
    "I",        # isort
]
ignore = [
    "E501",     # line too long, handled by black
    "B008",     # do not perform function calls in argument defaults
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.ruff.isort]
known-first-party = ["{{.project_name | replace "-" "_"}}"]

# MyPy configuration
[tool.mypy]
python_version = "{{.python_version}}"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pyspark.*",
    "delta.*",
    "databricks.*"
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow tests"
]

[tool.coverage.run]
source = ["src/"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py{{.python_version | replace "." ""}}']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''
